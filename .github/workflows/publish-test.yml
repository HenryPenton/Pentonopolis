name: publish test

on:
  workflow_dispatch:

permissions:
  actions: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Generate cache keys
        id: cache_keys
        run: |
          npm_dependencies_cache_key=pt-npm-dependencies-${{ hashFiles('pnpm-lock.yaml') }}
          nx_cache_key=${{ runner.os }}-pt-nx-${{ hashFiles('nx.json') }}

          echo "npm_dependencies_cache_key=$npm_dependencies_cache_key" >> "$GITHUB_ENV"
          echo "nx_cache_key=$nx_cache_key" >> "$GITHUB_ENV"

      - name: Restore cached npm dependencies
        id: cache_dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            **/node_modules
          key: ${{ env.npm_dependencies_cache_key }}

      - name: Restore nx cache
        id: cache_nx
        uses: actions/cache/restore@v4
        with:
          path: |
            .nx
          key: ${{ env.nx_cache_key }}

      - name: install dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

      - name: Cache npm dependencies
        if: steps.cache_dependencies.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            **/node_modules
          key: ${{ env.npm_dependencies_cache_key }}

      - run: |
          pnpm build
          pnpm tarball

      - uses: actions/upload-artifact@v4
        name: upload build artifacts
        with:
          name: build-artifacts-test
          path: projects/**/*.tgz

      - name: Delete existing nx cache
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete ${{ env.nx_cache_key }} --confirm || true
        if: steps.cache_nx.outputs.cache-hit == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache nx
        uses: actions/cache/save@v4
        with:
          path: |
            .nx
          key: ${{ env.nx_cache_key }}

  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-test
          path: .

      - run: |
          ls
