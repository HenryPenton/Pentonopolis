name: Check Specific Workflow Approval

on:
  schedule:
    - cron: "*/5 * * * *" # Runs every 5 minutes

jobs:
  check-approvals:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Check for pending approvals
        env:
          GITHUB_TOKEN: ${{ secrets.TRIGGER }}
        run: |
          REPO="henrypenton/pentonopolis"  # replace with your repository
          WORKFLOW_ID="test-deploy.yml"  # replace with your workflow file name
          HEADERS="Authorization: token $GITHUB_TOKEN"

          # Get workflow runs
          response=$(curl -s -H "$HEADERS" "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_ID/runs")

          # Parse the workflow runs
          pending_runs=$(echo $response | jq '[.workflow_runs[] | select(.status == "waiting" and .conclusion == null)]')
          running_runs=$(echo $response | jq '[.workflow_runs[] | select(.status == "in_progress")]')

          if [ $(echo $running_runs | jq 'length') -gt 0 ]; then
            echo "There are currently running runs, approval will not be triggered."
          elif [ $(echo $pending_runs | jq 'length') -gt 0 ]; then
            # Sort pending runs by creation date and get the oldest one
            longest_waiting_run=$(echo $pending_runs | jq -r 'sort_by(.created_at) | .[0]')
            run_id=$(echo $longest_waiting_run | jq -r '.id')
            
            # Approve the longest waiting run
            approve_response=$(curl -s -X POST -H "$HEADERS" "https://api.github.com/repos/$REPO/actions/runs/$run_id/approve")
            
            if [ $? -eq 0 ]; then
              echo "Approved run: $run_id"
            else
              echo "Failed to approve run: $run_id"
              echo "Response: $approve_response"
            fi
          else
            echo "No pending approvals found."
          fi
